###############################################
#################### NOTES ####################
###############################################
# 
# The stayfocused windowrulev2 is causing issues with selectable menus in certain cases. I should migrate away from these
#
#
#
###############################################
###############################################
###############################################





#############################
#############################
######### VARIABLES #########
#########  (global) #########
#############################

###### Keys ######
$mainMod = SUPER
$altMod = ALT

###### Scripts ######
$MYSCRIPTS = ~/mydots/scripts

########################################
########################################
### SPECIAL WORKSPACES - "DROPDOWNS" ###
###      (and associated binds)      ###
########################################



####################
###### SYSTEM ######
####################

### FILE MANAGER ###
# - $mod + E
$SWS_FILEMANAGER = File Manager
$FILEMANAGER_CLASS = org.gnome.Nautilus
$FILEMANAGER = nautilus
$mngrCmd = exec ~/.config/ml4w/settings/filemanager.sh # ML4W builtin file manager script
workspace = special:$SWS_FILEMANAGER, on-created-empty:$mngrCmd
bind = $mainMod, E, togglespecialworkspace, $SWS_FILEMANAGER # File Manager SWS
bindr = $mainMod SHIFT, E, exec, $FILEMANAGER --new-window # Open new file manager window

### PROCESSES / TASK MANAGER ###
# $mod + P
# Why will mission center only launch in floating mode regardless of anything?
$SWS_TASKMGR = Task Manager
$TASKMGR_CLASS = org.gnome.SystemMonitor
$TASKMGR = gnome-system-monitor
$taskmgrCmd = exec $TASKMGR
workspace = special:$SWS_TASKMGR, on-created-empty:$taskmgrCmd
windowrulev2 = unset, class:^($TASKMGR_CLASS)$ 
windowrulev2 = workspace special:$SWS_TASKMGR silent, class:^($TASKMGR_CLASS)$
bind = $mainMod, P, togglespecialworkspace, $SWS_TASKMGR # Task Manager SWS (Mission Center)



#######################
###### TERMINALS ######
#######################

$TERM = alacritty
$TERM_CLASS = Alacritty

### TERM 1 ###
# - $mod + T
$SWS_TERM1 = Term 1
$term1Cmd = exec $TERM
workspace = special:$SWS_TERM1, on-created-empty:$term1Cmd
bind = $mainMod, T, togglespecialworkspace, $SWS_TERM1 # Terminal 1 SWS

### TERM 2 ###
# - $mod + <SPACE>
$SWS_TERM2 = Term 2
$term2Cmd = exec $TERM
workspace = special:$SWS_TERM2, on-created-empty:$term2Cmd
bind = $mainMod, SPACE, togglespecialworkspace, $SWS_TERM2 # Terminal 2 SWS


bind = $mainMod SHIFT, T, exec, ~/.config/ml4w/settings/terminal.sh # New Terminal Window



######################
###### BROWSERS ######
######################

$SWS_BROWSER = Browser

$BROWSER1 = qutebrowser
$BROWSER_1_CLASS = org.qutebrowser.qutebrowser

$BROWSER2 = firefox -P private --new-window
$BROWSER_2_CLASS = firefox

$BROWSER3 = firefox --new-window
$BROWSER_3_CLASS = firefox

# $BROWSER3 = brave
# $BROWSER_3_CLASS = brave-browser

# Launchers
bindr = $mainMod, B, exec, $BROWSER1 # Open $BROWSER1
bindr = $mainMod SHIFT, B, exec, $BROWSER2 # Open $BROWSER2
bindr = $mainMod CTRL, B, exec, $BROWSER3 # Open $BROWSER3
#bindr = $mainMod ALT, B, exec, # Open $BROWSER4 (???)


### MAIN BROWSER ###
# - $mod + A
$browserCmd = exec $BROWSER1
workspace = special:$SWS_BROWSER, on-created-empty:$browserCmd
bind = $mainMod, A, togglespecialworkspace, $SWS_BROWSER # Primary Browser SWS


### DICTIONARY & THESAURUS ###
# - $mod + D
$SWS_DICTIONARY = Dictionary
$DICTIONARY = qutebrowser
#$dictionaryCmd = exec firefox --new-window 'https://www.onelook.com/reverse-dictionary.shtml'
$dictionaryCmd = exec $DICTIONARY --target window 'https://www.onelook.com/reverse-dictionary.shtml'
workspace = special:$SWS_DICTIONARY, on-created-empty:$dictionaryCmd
bind = $mainMod, D, togglespecialworkspace, $SWS_DICTIONARY # Dictionary SWS (Onelook Reverse in Browser)






###################
###### MEDIA ######
###################

### MULTIMEDIA ###
# $mod + M
$SWS_MULTIMEDIA = Multimedia Player
$MULTIMEDIA = firefox
$musicCmd = exec firefox -p multimedia
workspace = special:$SWS_MULTIMEDIA, on-created-empty:$musicCmd
workspace = special:$SWS_MULTIMEDIA, layoutopt:orientation:center
bind = $mainMod, M, togglespecialworkspace, $SWS_MULTIMEDIA # Multimedia SWS (music)

### OBS ###



###################
###### OTHER ######
###################



# Obsidian
workspace = special:Obsidian, on-created-empty:exec obsidian
bindr = $mainMod, O, togglespecialworkspace, Obsidian # Obsidian SWS
bindr = $mainMod SHIFT, O, exec, obsidian # Open Obsidian.md
bindr = $mainMod CTRL SHIFT, O, movetoworkspace, special:Obsidian # Move active window to Obsidian SWS
#binddr = $mainMod SHIFT, O, "Open current Obsidian tab in a new window. Works by sending a KB shortcut to the Obsidian window. The hotkey MUST be correctly defined within Obsidian settings.", sendshortcut, Alt_Shift, W, title:.*( - Obsidian v).*$ # Move current Obsidian tab to separate window

# Calculator
#bind = $mainMod CTRL, C, exec, ~/.config/ml4w/settings/calculator.sh # Open the calculator

# Misc
#bind = $mainMod CTRL, E, exec, ~/.config/ml4w/settings/emojipicker.sh # Open the emoji picker



##########################################
########## Speech-to-Text & TTS ##########
##########################################

###### Speech Note ######
# 
# Actions:
#
# start-reading
# start-reading-clipboard
# pause-resume-reading
# cancel
#
# start-listening
# start-listening-active-window
# start-listening-clipboard
# stop-listening
#
# (Some of these are only X11 compatible. Wayland/Hyprland will require finding a supported option)

$voiceCmd = flatpak run net.mkiol.SpeechNote --action
bindr = $mainMod, I, exec, $voiceCmd start-listening-clipboard
bindr = $mainMod SHIFT, I, exec, $voiceCmd stop-listening

#bindr = $mainMod CTRL, I, exec, $voiceCmd start-listening-active-window

#bindr = $mainMod, R, exec, $voiceCmd start-reading
bindr = $mainMod SHIFT, R, exec, $voiceCmd start-reading-clipboard

bindr = $mainMod, BACKSPACE, exec, $voiceCmd cancel
#bind = $mainMod, I, exec, $voiceCmd stop-listening || $voiceCmd start-listening-clipboard




#####################################################################
#####################################################################
############################## SUBMAPS ##############################
#####################################################################
#####################################################################






###### VM-Compatible ######
#
### Passthrough SUPER KEY to Virtual Machine ###
bind = $mainMod, DELETE, submap, passthru # Passthrough SUPER key to virtual machine
submap = passthru
bind = SUPER, DELETE, submap, reset # Get SUPER key back from virtual machine

### Preserve controls with $altMod ###

# Closing Active Windows / Killing Process in Active Window (implement this)
bindr = $altMod, Q, killactive # Kill active window

# Fullscreening
bindr = $altMod, F, fullscreen, 0 # Set active window to fullscreen
bindr = $altMod SHIFT, F, fullscreen, 1 # Maximize active window to full workspace (minus gapps and bars)
bindr = $altMod CTRL, F, fullscreenstate, -1, 2 # Toggle fullscreen in current window, but preserve workspace state (eg, hide tabs/url/bookmarks bar in browser)

bind = $altMod, left, movefocus, l # Move focus left
bind = $altMod, H, movefocus, l # Move focus left
bind = $altMod, right, movefocus, r # Move focus right
bind = $altMod, L, movefocus, r # Move focus right
bind = $altMod, up, movefocus, u # Move focus up
bind = $altMod, K, movefocus, u # Move focus up
bind = $altMod, down, movefocus, d # Move focus down
bind = $altMod, J, movefocus, d # Move focus down

### Resizing Active Windows
bind = $altMod SHIFT, left, resizeactive, -100 0 # Reduce window width with keyboard
bind = $altMod SHIFT, H, resizeactive, -100 0 # Reduce window width with keyboard
bind = $altMod SHIFT, right, resizeactive, 100 0 # Increase window width with keyboard
bind = $altMod SHIFT, L, resizeactive, 100 0 # Increase window width with keyboard
bind = $altMod SHIFT, up, resizeactive, 0 -100 # Reduce window height with keyboard
bind = $altMod SHIFT, K, resizeactive, 0 -100 # Reduce window height with keyboard
bind = $altMod SHIFT, down, resizeactive, 0 100 # Increase window height with keyboard
bind = $altMod SHIFT, J, resizeactive, 0 100 # Increase window height with keyboard

### Moving Windows
bind = $altMod CTRL, left, movewindow, l silent # Move left within workspace
bind = $altMod CTRL, H, movewindow, l silent # Move left within workspace
bind = $altMod CTRL, right, movewindow, r silent # Move right within workspace
bind = $altMod CTRL, L, movewindow, r silent # Move right within workspace
bind = $altMod CTRL, up, movewindow, u silent # Move up within workspace
bind = $altMod CTRL, K, movewindow, u silent # Move up within workspace
bind = $altMod CTRL, down, movewindow, d silent # Move down within workspace
bind = $altMod CTRL, J, movewindow, d silent # Move down within workspace

# Mouse-based Window Control/Movement
bindm = $altMod, mouse:272, movewindow # Move window with the mouse
bindm = $altMod, mouse:273, resizewindow # Resize window with the mouse

# Grouping Windows
bind = $altMod, G, togglegroup # Toggle window group


# SWS
bindr = $altMod, O, togglespecialworkspace, Obsidian

bindr = $altMod, A, togglespecialworkspace, $SWS_BROWSER

bindr = $altMod, Escape, exec, hyprctl dispatch togglespecialworkspace $SWS_EMPTY; hyprctl dispatch togglespecialworkspace $SWS_EMPTY

# Master Layout Binds
bind = $altMod, S, layoutmsg, swapwithmaster # Swapsplit
bind = $altMod SHIFT, S, layoutmsg, orientationcycle left center right
bind = $altMod, N, layoutmsg, rollprev

submap = reset
#########################################################
